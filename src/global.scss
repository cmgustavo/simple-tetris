/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/* Custom CSS for Ionic components */

ion-item {
  --transition: none;
}

/* ==============================
   Global Flat Design Styles
   ============================== */
* {
  box-shadow: none !important;
  text-shadow: none !important;
}

:root {
  --ion-font-size-base: 16px; /* Base font size */
  /* Used by Home page to paint ion-content background */
  --home-gradient: none;
}

/* Optional tiny preview swatches in Settings list */
.theme-swatch {
  width: 36px;
  height: 24px;
  border-radius: 6px;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, .06) inset;
}


/* Increase font size for form elements and labels */
ion-label,
ion-note {
  font-size: 1.1rem !important;
}

ion-input,
ion-textarea,
ion-select,
ion-datetime {
  font-size: 1.1rem !important;
}

/* Increase font size for list items and buttons */
ion-item {
  font-size: 1.1rem;
}

/* For form fields */
.item-input {
  font-size: 1.1rem;
}

.game-container {
  position: relative;
  overflow: hidden;
  display: inline-block;
}

.game-container canvas {
  position: relative;
  z-index: 1;
  display: block;
}

/* Score bump/pulse */
.score-bump {
  position: relative;
  display: inline-flex;
  animation: scoreBump 380ms ease-out;
}

/* Colorful gradient-on-text, only while bumping */
.score-bump {
  /* Pastel palette (tweak freely) */
  --sb1: #5e92fa; /* primary */
  --sb2: #87ceeb; /* soft blue */
  --sb3: #ffb3c6; /* soft pink */
  --sb4: #b5ead7; /* mint */
  --sb5: #ffd6a5; /* pastel orange */
  background: linear-gradient(90deg, var(--sb1), var(--sb2), var(--sb3), var(--sb4), var(--sb5));
  background-size: 250% 100%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent; /* iOS/Safari */
  text-shadow: 0 0 8px rgba(255, 255, 255, .35);
  filter: drop-shadow(0 1px 0 rgba(0, 0, 0, .1));
  animation: scoreRainbow 900ms ease-out;
}

/* Subtle sparkles that fade out */
.score-bump::after {
  content: '';
  pointer-events: none;
  position: absolute;
  inset: -4px;
  background: radial-gradient(2px 2px at 15% 35%, rgba(255, 255, 255, .95) 60%, transparent 61%),
  radial-gradient(1.5px 1.5px at 80% 20%, rgba(255, 255, 255, .9) 60%, transparent 61%),
  radial-gradient(1.8px 1.8px at 65% 75%, rgba(255, 255, 255, .9) 60%, transparent 61%),
  radial-gradient(1.2px 1.2px at 40% 60%, rgba(255, 255, 255, .9) 60%, transparent 61%);
  opacity: 0;
  animation: sparkles 480ms ease-out;
}

@keyframes scoreBump {
  0% {
    transform: scale(1);
  }
  25% {
    transform: scale(1.15);
  }
  100% {
    transform: scale(1);
  }
}

/* Gradient shimmer */
@keyframes scoreRainbow {
  from {
    background-position: 0% 50%;
  }
  to {
    background-position: 100% 50%;
  }
}

/* Sparkles fade & drift */
@keyframes sparkles {
  0% {
    opacity: .9;
    transform: translateY(0) scale(1);
  }
  100% {
    opacity: 0;
    transform: translateY(-4px) scale(1.15);
  }
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  .score-bump,
  .score-bump.current,
  .score-bump::after {
    animation: none !important;
  }
  .score-bump.current,
  .score-bump .score-text {
    -webkit-text-fill-color: currentColor; /* fall back to normal text */
    background: none;
    text-shadow: none;
    filter: none;
  }
}

/* ================================================================
   1) lock-thud — tiny drop + pastel ring pulse
   ================================================================= */
.lock-thud {
  animation: lockThud 100ms ease-out;
  filter: drop-shadow(0 1px 0 rgba(0, 0, 0, .1));
}

@keyframes lockThud {
  0% {
    transform: translateY(-1px);
  }
  100% {
    transform: translateY(0);
  }
}

/* ================================================================
   2) line-flash — quick pastel “shine” sweep across the board
   ================================================================= */
.line-flash {
  animation: lineFlash 300ms ease-out;
  filter: drop-shadow(0 3px 0 rgba(0, 0, 0, .2));
}

@keyframes lineFlash {
  0% {
    opacity: 0;
  }
  20% {
    opacity: 0.3;
  }
  80% {
    opacity: 0.6;
  }
  100% {
    opacity: 1;
  }
}

/* ================================================================
   3) tetris-burst — celebratory burst + confetti sparkles
   ================================================================= */

.tetris-burst {
  animation: tetrisBurst 520ms cubic-bezier(0.2, 0.7, 0, 1.1);
  will-change: transform, filter;
  filter: drop-shadow(0 0 10px rgba(255, 255, 255, 0.25));
}

@keyframes tetrisBurst {
  0% {
    transform: scale(1);
  }
  30% {
    transform: scale(1.18);
  }
  100% {
    transform: scale(1);
  }
}

/* ===================== BUTTONS ===================== */

/* === Compact, elegant IonButton defaults === */
:root {
  --btn-radius: 10px;
  --btn-font-size: 0.92rem;
  --btn-pad-x: 12px;
  --btn-pad-y: 6px;
}

/* Make all buttons more compact by default */
ion-button {
  /* Size & shape */
  --border-radius: var(--btn-radius);
  --padding-start: var(--btn-pad-x);
  --padding-end: var(--btn-pad-x);
  --padding-top: var(--btn-pad-y);
  --padding-bottom: var(--btn-pad-y);
  height: auto;           /* let padding drive height */
  min-height: 32px;       /* keep target > 32px for accessibility */
  font-size: var(--btn-font-size);
  letter-spacing: .2px;
  font-weight: 500;

  /* Clean surface */
  --box-shadow: none;
  --ripple-color: color-mix(in srgb, currentColor 18%, transparent);

  /* Smooth hover on desktop */
  transition: background-color .15s ease, border-color .15s ease, transform .05s ease;
}

@media (pointer: fine) {
  ion-button:hover { filter: brightness(1.02); }
  ion-button:active { transform: translateY(0.5px); }
}

/* Focus ring (inside the shadow DOM) */
ion-button::part(native):focus-visible {
  outline: 2px solid var(--ion-color-primary);
  outline-offset: 2px;
  border-radius: inherit;
}

/* Solid, Outline, Clear: refined palettes */
ion-button[fill="solid"] {
  --background: var(--ion-color-primary);
  --color: var(--ion-color-primary-contrast);
}

ion-button[fill="outline"] {
  --background: transparent;
  --border-color: color-mix(in srgb, currentColor 22%, transparent);
  --color: var(--ion-text-color);
}

ion-button[fill="clear"] {
  --background: transparent;
  --color: var(--ion-text-color);
}

/* Ghost (subtle) button: use class="ghost" */
ion-button.ghost {
  --background: color-mix(in srgb, var(--ion-text-color) 6%, transparent);
  --color: var(--ion-text-color);
  --border-radius: 9999px; /* pill */
}

/* Icon-only: tidy circular “chip” buttons (class="icon-only") */
ion-button.icon-only {
  --padding-start: 8px;
  --padding-end: 8px;
  --padding-top: 6px;
  --padding-bottom: 6px;
  --border-radius: 9999px;
}
ion-button.icon-only ion-icon { font-size: 18px; margin: 0; }

/* Smaller buttons inside toolbars (less padding) */
ion-toolbar ion-buttons ion-button {
  --padding-start: 8px;
  --padding-end: 8px;
  --border-radius: 8px;
}

/* iOS vs MD tiny polish (optional) */
.ios ion-button { font-weight: 600; }
.md  ion-button { font-weight: 500; }

/* Dark mode tuning for subtle backgrounds */
@media (prefers-color-scheme: dark) {
  ion-button.ghost {
    --background: color-mix(in srgb, var(--ion-text-color) 12%, transparent);
  }
  ion-button[fill="outline"] {
    --border-color: color-mix(in srgb, currentColor 28%, transparent);
  }
}

